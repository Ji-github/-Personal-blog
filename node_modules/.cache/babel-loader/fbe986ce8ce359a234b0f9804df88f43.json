{"remainingRequest":"/Users/jixinyan/Desktop/前端/DuYi-Vue2/1. 入门/39. 打包结果分析/课堂代码/my-site/node_modules/thread-loader/dist/cjs.js!/Users/jixinyan/Desktop/前端/DuYi-Vue2/1. 入门/39. 打包结果分析/课堂代码/my-site/node_modules/babel-loader/lib/index.js!/Users/jixinyan/Desktop/前端/DuYi-Vue2/1. 入门/39. 打包结果分析/课堂代码/my-site/src/mock/blog.js","dependencies":[{"path":"/Users/jixinyan/Desktop/前端/DuYi-Vue2/1. 入门/39. 打包结果分析/课堂代码/my-site/src/mock/blog.js","mtime":1622901908747},{"path":"/Users/jixinyan/Desktop/前端/DuYi-Vue2/1. 入门/39. 打包结果分析/课堂代码/my-site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jixinyan/Desktop/前端/DuYi-Vue2/1. 入门/39. 打包结果分析/课堂代码/my-site/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jixinyan/Desktop/前端/DuYi-Vue2/1. 入门/39. 打包结果分析/课堂代码/my-site/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE1vY2sgZnJvbSAibW9ja2pzIjsKaW1wb3J0IHFzIGZyb20gInF1ZXJ5c3RyaW5nIjsKTW9jay5tb2NrKCIvYXBpL2Jsb2d0eXBlIiwgImdldCIsIHsKICBjb2RlOiAwLAogIG1zZzogIiIsCiAgImRhdGF8MTAtMjAiOiBbewogICAgImlkfCsxIjogMSwKICAgIG5hbWU6ICLliIbnsbtAaWQiLAogICAgImFydGljbGVDb3VudHwwLTMwMCI6IDAsCiAgICAib3JkZXJ8KzEiOiAxCiAgfV0KfSk7Ck1vY2subW9jaygvXlwvYXBpXC9ibG9nKFw/LispPyQvLCAiZ2V0IiwgZnVuY3Rpb24gKG9wdGlvbnMpIHsKICBjb25zdCBxdWVyeSA9IHFzLnBhcnNlKG9wdGlvbnMudXJsKTsKICByZXR1cm4gTW9jay5tb2NrKHsKICAgIGNvZGU6IDAsCiAgICBtc2c6ICIiLAogICAgZGF0YTogewogICAgICAidG90YWx8MjAwMC0zMDAwIjogMCwKICAgICAgW2Byb3dzfCR7cXVlcnkubGltaXQgfHwgMTB9YF06IFt7CiAgICAgICAgaWQ6ICJAZ3VpZCIsCiAgICAgICAgdGl0bGU6ICJAY3RpdGxlKDEsIDUwKSIsCiAgICAgICAgZGVzY3JpcHRpb246ICJAY3BhcmFncmFwaCgxLCAxMCkiLAogICAgICAgIGNhdGVnb3J5OiB7CiAgICAgICAgICAiaWR8MS0xMCI6IDAsCiAgICAgICAgICBuYW1lOiAi5YiG57G7QGlkIgogICAgICAgIH0sCiAgICAgICAgInNjYW5OdW1iZXJ8MC0zMDAwIjogMCwKICAgICAgICAiY29tbWVudE51bWJlcnwwLTMwMCI6IDMwLAogICAgICAgICJ0aHVtYnwxIjogWyJAaW1hZ2UoMzAweDI1MCwgQGNvbG9yLCAjZmZmLCBAbmF0dXJhbCkiXSwKICAgICAgICBjcmVhdGVEYXRlOiBgQGRhdGUoJ1QnKWAKICAgICAgfV0KICAgIH0KICB9KTsKfSk7Ck1vY2subW9jaygvXlwvYXBpXC9ibG9nXC9bXi9dKyQvLCAiZ2V0IiwgewogIGNvZGU6IDAsCiAgbXNnOiAiIiwKICBkYXRhOiB7CiAgICBpZDogIkBndWlkIiwKICAgIHRpdGxlOiAiQ09SU+i3qOWfn+aWueahiOivpuinoyIsCiAgICBjYXRlZ29yeTogewogICAgICAiaWR8MS0xMCI6IDEsCiAgICAgIG5hbWU6ICLliIbnsbtAaWQiCiAgICB9LAogICAgZGVzY3JpcHRpb246ICJAY3BhcmFncmFwaCgxLCAxMCkiLAogICAgInNjYW5OdW1iZXJ8MC0xMDAwMCI6IDAsCiAgICAiY29tbWVudE51bWJlcnwwLTEwMCI6IDAsCiAgICBjcmVhdGVEYXRlOiAiQGRhdGUoJ1QnKSIsCiAgICB0b2M6IFt7CiAgICAgIG5hbWU6ICLmpoLov7AiLAogICAgICBhbmNob3I6ICJhcnRpY2xlLW1kLXRpdGxlLTEiCiAgICB9LCB7CiAgICAgIG5hbWU6ICLnroDljZXor7fmsYIiLAogICAgICBhbmNob3I6ICJhcnRpY2xlLW1kLXRpdGxlLTIiLAogICAgICBjaGlsZHJlbjogW3sKICAgICAgICBuYW1lOiAi566A5Y2V6K+35rGC55qE5Yik5a6aIiwKICAgICAgICBhbmNob3I6ICJhcnRpY2xlLW1kLXRpdGxlLTMiCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAi566A5Y2V6K+35rGC55qE5Lqk5LqS6KeE6IyDIiwKICAgICAgICBhbmNob3I6ICJhcnRpY2xlLW1kLXRpdGxlLTQiCiAgICAgIH1dCiAgICB9LCB7CiAgICAgIG5hbWU6ICLpnIDopoHpooTmo4DnmoTor7fmsYIiLAogICAgICBhbmNob3I6ICJhcnRpY2xlLW1kLXRpdGxlLTUiCiAgICB9LCB7CiAgICAgIG5hbWU6ICLpmYTluKbouqvku73lh63or4HnmoTor7fmsYIiLAogICAgICBhbmNob3I6ICJhcnRpY2xlLW1kLXRpdGxlLTYiCiAgICB9LCB7CiAgICAgIG5hbWU6ICLkuIDkuKrpop3lpJbnmoTooaXlhYUiLAogICAgICBhbmNob3I6ICJhcnRpY2xlLW1kLXRpdGxlLTciCiAgICB9XSwKICAgICJ0aHVtYnwxIjogW01vY2suUmFuZG9tLmltYWdlKCIzMDB4MjUwIiwgIiMwMDAiLCAiI2ZmZiIsICJSYW5kb20gSW1hZ2UiKSwgbnVsbF0sCiAgICBodG1sQ29udGVudDogYDxibG9ja3F1b3RlPgogIDxwPumYheivu+acrOaWh++8jOS9oOmcgOimgemmluWFiOefpemBk++8mjwvcD48b2w+CiAgPGxpPua1j+iniOWZqOeahOWQjOa6kOetlueVpTwvbGk+CiAgPGxpPui3qOWfn+mXrumimDwvbGk+CiAgPGxpPkpTT05Q5Y6f55CGPC9saT4KICA8bGk+Y29va2ll5Y6f55CGPC9saT4KICA8L29sPgogIDwvYmxvY2txdW90ZT4KICA8cD5KU09OUOW5tuS4jeaYr+S4gOS4quWlveeahOi3qOWfn+ino+WGs+aWueahiO+8jOWug+iHs+WwkeacieedgOS4i+mdouS4pOS4quS4pemHjemXrumimO+8mjwvcD48b2w+CiAgPGxpPjxzdHJvbmc+5Lya5omT5Lmx5pyN5Yqh5Zmo55qE5raI5oGv5qC85byPPC9zdHJvbmc+77yaSlNPTlDopoHmsYLmnI3liqHlmajlk43lupTkuIDmrrVKU+S7o+egge+8jOS9huWcqOmdnui3qOWfn+eahOaDheWGteS4i++8jOacjeWKoeWZqOWPiOmcgOimgeWTjeW6lOS4gOS4quato+W4uOeahEpTT07moLzlvI88L2xpPgogIDxsaT48c3Ryb25nPuWPquiDveWujOaIkEdFVOivt+axgjwvc3Ryb25nPu+8mkpTT05Q55qE5Y6f55CG5Lya6KaB5rGC5rWP6KeI5Zmo56uv55Sf5oiQ5LiA5LiqPGNvZGU+c2NyaXB0PC9jb2RlPuWFg+e0oO+8jOiAjDxjb2RlPnNjcmlwdDwvY29kZT7lhYPntKDlj5Hlh7rnmoTor7fmsYLlj6rog73mmK88Y29kZT5nZXQ8L2NvZGU+6K+35rGCPC9saT4KICA8L29sPgogIDxwPuaJgOS7pe+8jENPUlPmmK/kuIDnp43mm7Tlpb3nmoTot6jln5/op6PlhrPmlrnmoYjjgII8L3A+PGgxIGlkPSJhcnRpY2xlLW1kLXRpdGxlLTEiPuamgui/sDwvaDE+PHA+PGNvZGU+Q09SUzwvY29kZT7mmK/ln7rkuo48Y29kZT5odHRwMS4xPC9jb2RlPueahOS4gOenjei3qOWfn+ino+WGs+aWueahiO+8jOWug+eahOWFqOensOaYrzxzdHJvbmc+Qzwvc3Ryb25nPnJvc3MtPHN0cm9uZz5PPC9zdHJvbmc+cmlnaW4gPHN0cm9uZz5SPC9zdHJvbmc+ZXNvdXJjZSA8c3Ryb25nPlM8L3N0cm9uZz5oYXJpbmfvvIzot6jln5/otYTmupDlhbHkuqvjgII8L3A+PHA+5a6D55qE5oC75L2T5oCd6Lev5piv77yaPHN0cm9uZz7lpoLmnpzmtY/op4jlmajopoHot6jln5/orr/pl67mnI3liqHlmajnmoTotYTmupDvvIzpnIDopoHojrflvpfmnI3liqHlmajnmoTlhYHorrg8L3N0cm9uZz48L3A+PGZpZ3VyZSBjbGFzcz0ibWFya2Rvd24taW1hZ2UiPgogICAgICAgIAogICAgICAgIDxpbWcgc3R5bGU9IndpZHRoOmF1dG8iIHNyYz0iaHR0cDovL21kcnMueXVhbmppbi50ZWNoL2ltZy9pbWFnZS0yMDIwMDQyMTE1MjEyMjc5My5wbmciIHRpdGxlPSJpbWFnZS0yMDIwMDQyMTE1MjEyMjc5MyIgYWx0PSJpbWFnZS0yMDIwMDQyMTE1MjEyMjc5MyI+CiAgICAgICAgPGZpZ2NhcHRpb24+aW1hZ2UtMjAyMDA0MjExNTIxMjI3OTM8L2ZpZ2NhcHRpb24+CiAgICAKICAgICAgPC9maWd1cmU+PHA+6ICM6KaB55+l6YGT77yM5LiA5Liq6K+35rGC5Y+v5Lul6ZmE5bim5b6I5aSa5L+h5oGv77yM5LuO6ICM5Lya5a+55pyN5Yqh5Zmo6YCg5oiQ5LiN5ZCM56iL5bqm55qE5b2x5ZONPC9wPjxwPuavlOWmguacieeahOivt+axguWPquaYr+iOt+WPluS4gOS6m+aWsOmXu++8jOacieeahOivt+axguS8muaUueWKqOacjeWKoeWZqOeahOaVsOaNrjwvcD48cD7pkojlr7nkuI3lkIznmoTor7fmsYLvvIxDT1JT6KeE5a6a5LqG5LiJ56eN5LiN5ZCM55qE5Lqk5LqS5qih5byP77yM5YiG5Yir5piv77yaPC9wPjx1bD4KICA8bGk+PHN0cm9uZz7nroDljZXor7fmsYI8L3N0cm9uZz48L2xpPgogIDxsaT48c3Ryb25nPumcgOimgemihOajgOeahOivt+axgjwvc3Ryb25nPjwvbGk+CiAgPGxpPjxzdHJvbmc+6ZmE5bim6Lqr5Lu95Yet6K+B55qE6K+35rGCPC9zdHJvbmc+PC9saT4KICA8L3VsPgogIDxwPui/meS4ieenjeaooeW8j+S7juS4iuWIsOS4i+WxguWxgumAkui/m++8jOivt+axguWPr+S7peWBmueahOS6i+i2iuadpei2iuWkmu+8jOimgeaxguS5n+i2iuadpei2iuS4peagvOOAgjwvcD48cD7kuIvpnaLliIbliKvor7TmmI7kuInnp43or7fmsYLmqKHlvI/nmoTlhbfkvZPop4TojIPjgII8L3A+PGgxIGlkPSJhcnRpY2xlLW1kLXRpdGxlLTIiPueugOWNleivt+axgjwvaDE+PHA+5b2T5rWP6KeI5Zmo56uv6L+Q6KGM5LqG5LiA5q61YWpheOS7o+egge+8iOaXoOiuuuaYr+S9v+eUqFhNTEh0dHBSZXF1ZXN06L+Y5pivZmV0Y2ggYXBp77yJ77yM5rWP6KeI5Zmo5Lya6aaW5YWI5Yik5pat5a6D5bGe5LqO5ZOq5LiA56eN6K+35rGC5qih5byPPC9wPjxoMiBpZD0iYXJ0aWNsZS1tZC10aXRsZS0zIj7nroDljZXor7fmsYLnmoTliKTlrpo8L2gyPjxwPuW9k+ivt+axgjxzdHJvbmc+5ZCM5pe25ruh6LazPC9zdHJvbmc+5Lul5LiL5p2h5Lu25pe277yM5rWP6KeI5Zmo5Lya6K6k5Li65a6D5piv5LiA5Liq566A5Y2V6K+35rGC77yaPC9wPjxvbD4KICA8bGk+PHA+PHN0cm9uZz7or7fmsYLmlrnms5XlsZ7kuo7kuIvpnaLnmoTkuIDnp43vvJo8L3N0cm9uZz48L3A+PHVsPgogIDxsaT5nZXQ8L2xpPgogIDxsaT5wb3N0PC9saT4KICA8bGk+aGVhZDwvbGk+CiAgPC91bD4KICA8L2xpPgogIDxsaT48cD48c3Ryb25nPuivt+axguWktOS7heWMheWQq+WuieWFqOeahOWtl+aute+8jOW4uOingeeahOWuieWFqOWtl+auteWmguS4i++8mjwvc3Ryb25nPjwvcD48dWw+CiAgPGxpPjxjb2RlPkFjY2VwdDwvY29kZT48L2xpPgogIDxsaT48Y29kZT5BY2NlcHQtTGFuZ3VhZ2U8L2NvZGU+PC9saT4KICA8bGk+PGNvZGU+Q29udGVudC1MYW5ndWFnZTwvY29kZT48L2xpPgogIDxsaT48Y29kZT5Db250ZW50LVR5cGU8L2NvZGU+PC9saT4KICA8bGk+PGNvZGU+RFBSPC9jb2RlPjwvbGk+CiAgPGxpPjxjb2RlPkRvd25saW5rPC9jb2RlPjwvbGk+CiAgPGxpPjxjb2RlPlNhdmUtRGF0YTwvY29kZT48L2xpPgogIDxsaT48Y29kZT5WaWV3cG9ydC1XaWR0aDwvY29kZT48L2xpPgogIDxsaT48Y29kZT5XaWR0aDwvY29kZT48L2xpPgogIDwvdWw+CiAgPC9saT4KICA8bGk+PHA+PHN0cm9uZz7or7fmsYLlpLTlpoLmnpzljIXlkKs8Y29kZT5Db250ZW50LVR5cGU8L2NvZGU+77yM5LuF6ZmQ5LiL6Z2i55qE5YC85LmL5LiA77yaPC9zdHJvbmc+PC9wPjx1bD4KICA8bGk+PGNvZGU+dGV4dC9wbGFpbjwvY29kZT48L2xpPgogIDxsaT48Y29kZT5tdWx0aXBhcnQvZm9ybS1kYXRhPC9jb2RlPjwvbGk+CiAgPGxpPjxjb2RlPmFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDwvY29kZT48L2xpPgogIDwvdWw+CiAgPC9saT4KICA8L29sPgogIDxwPuWmguaenOS7peS4iuS4ieS4quadoeS7tuWQjOaXtua7oei2s++8jOa1j+iniOWZqOWIpOWumuS4uueugOWNleivt+axguOAgjwvcD48cD7kuIvpnaLmmK/kuIDkupvkvovlrZDvvJo8L3A+PHByZT48Y29kZSBjbGFzcz0ibGFuZ3VhZ2UtanMiPjxzcGFuIGNsYXNzPSJobGpzLWNvbW1lbnQiPi8vIOeugOWNleivt+axgjwvc3Bhbj4KICBmZXRjaCg8c3BhbiBjbGFzcz0iaGxqcy1zdHJpbmciPiJodHRwOi8vY3Jvc3Nkb21haW4uY29tL2FwaS9uZXdzIjwvc3Bhbj4pOwogIAogIDxzcGFuIGNsYXNzPSJobGpzLWNvbW1lbnQiPi8vIOivt+axguaWueazleS4jea7oei2s+imgeaxgu+8jOS4jeaYr+eugOWNleivt+axgjwvc3Bhbj4KICBmZXRjaCg8c3BhbiBjbGFzcz0iaGxqcy1zdHJpbmciPiJodHRwOi8vY3Jvc3Nkb21haW4uY29tL2FwaS9uZXdzIjwvc3Bhbj4sIHsKICAgIDxzcGFuIGNsYXNzPSJobGpzLWF0dHIiPm1ldGhvZDwvc3Bhbj46PHNwYW4gY2xhc3M9ImhsanMtc3RyaW5nIj4iUFVUIjwvc3Bhbj4KICB9KQogIAogIDxzcGFuIGNsYXNzPSJobGpzLWNvbW1lbnQiPi8vIOWKoOWFpeS6humineWklueahOivt+axguWktO+8jOS4jeaYr+eugOWNleivt+axgjwvc3Bhbj4KICBmZXRjaCg8c3BhbiBjbGFzcz0iaGxqcy1zdHJpbmciPiJodHRwOi8vY3Jvc3Nkb21haW4uY29tL2FwaS9uZXdzIjwvc3Bhbj4sIHsKICAgIDxzcGFuIGNsYXNzPSJobGpzLWF0dHIiPmhlYWRlcnM8L3NwYW4+OnsKICAgICAgPHNwYW4gY2xhc3M9ImhsanMtYXR0ciI+YTwvc3Bhbj46IDxzcGFuIGNsYXNzPSJobGpzLW51bWJlciI+MTwvc3Bhbj4KICAgIH0KICB9KQogIAogIDxzcGFuIGNsYXNzPSJobGpzLWNvbW1lbnQiPi8vIOeugOWNleivt+axgjwvc3Bhbj4KICBmZXRjaCg8c3BhbiBjbGFzcz0iaGxqcy1zdHJpbmciPiJodHRwOi8vY3Jvc3Nkb21haW4uY29tL2FwaS9uZXdzIjwvc3Bhbj4sIHsKICAgIDxzcGFuIGNsYXNzPSJobGpzLWF0dHIiPm1ldGhvZDwvc3Bhbj46IDxzcGFuIGNsYXNzPSJobGpzLXN0cmluZyI+InBvc3QiPC9zcGFuPgogIH0pCiAgCiAgPHNwYW4gY2xhc3M9ImhsanMtY29tbWVudCI+Ly8gY29udGVudC10eXBl5LiN5ruh6Laz6KaB5rGC77yM5LiN5piv566A5Y2V6K+35rGCPC9zcGFuPgogIGZldGNoKDxzcGFuIGNsYXNzPSJobGpzLXN0cmluZyI+Imh0dHA6Ly9jcm9zc2RvbWFpbi5jb20vYXBpL25ld3MiPC9zcGFuPiwgewogICAgPHNwYW4gY2xhc3M9ImhsanMtYXR0ciI+bWV0aG9kPC9zcGFuPjogPHNwYW4gY2xhc3M9ImhsanMtc3RyaW5nIj4icG9zdCI8L3NwYW4+LAogICAgPHNwYW4gY2xhc3M9ImhsanMtYXR0ciI+aGVhZGVyczwvc3Bhbj46IHsKICAgICAgPHNwYW4gY2xhc3M9ImhsanMtc3RyaW5nIj4iY29udGVudC10eXBlIjwvc3Bhbj46IDxzcGFuIGNsYXNzPSJobGpzLXN0cmluZyI+ImFwcGxpY2F0aW9uL2pzb24iPC9zcGFuPgogICAgfQogIH0pPC9jb2RlPjwvcHJlPgogIDxoMiBpZD0iYXJ0aWNsZS1tZC10aXRsZS00Ij7nroDljZXor7fmsYLnmoTkuqTkupLop4TojIM8L2gyPjxwPuW9k+a1j+iniOWZqOWIpOWumuafkOS4qjxzdHJvbmc+YWpheOi3qOWfn+ivt+axgjwvc3Ryb25nPuaYrzxzdHJvbmc+566A5Y2V6K+35rGCPC9zdHJvbmc+5pe277yM5Lya5Y+R55Sf5Lul5LiL55qE5LqL5oOFPC9wPjxvbD4KICA8bGk+PHN0cm9uZz7or7fmsYLlpLTkuK3kvJroh6rliqjmt7vliqA8Y29kZT5PcmlnaW48L2NvZGU+5a2X5q61PC9zdHJvbmc+PC9saT4KICA8L29sPgogIDxwPuavlOWmgu+8jOWcqOmhtemdojxjb2RlPmh0dHA6Ly9teS5jb20vaW5kZXguaHRtbDwvY29kZT7kuK3mnInku6XkuIvku6PnoIHpgKDmiJDkuobot6jln588L3A+PHByZT48Y29kZSBjbGFzcz0ibGFuZ3VhZ2UtanMiPjxzcGFuIGNsYXNzPSJobGpzLWNvbW1lbnQiPi8vIOeugOWNleivt+axgjwvc3Bhbj4KICBmZXRjaCg8c3BhbiBjbGFzcz0iaGxqcy1zdHJpbmciPiJodHRwOi8vY3Jvc3Nkb21haW4uY29tL2FwaS9uZXdzIjwvc3Bhbj4pOzwvY29kZT48L3ByZT4KICA8cD7or7fmsYLlj5Hlh7rlkI7vvIzor7fmsYLlpLTkvJrmmK/kuIvpnaLnmoTmoLzlvI/vvJo8L3A+PHByZT48Y29kZT5HRVQgL2FwaS9uZXdzLyBIVFRQLzEuMQogIEhvc3Q6IGNyb3NzZG9tYWluLmNvbQogIENvbm5lY3Rpb246IGtlZXAtYWxpdmUKICAuLi4KICBSZWZlcmVyOiBodHRwOi8vbXkuY29tL2luZGV4Lmh0bWwKICBPcmlnaW46IGh0dHA6Ly9teS5jb208L2NvZGU+PC9wcmU+PHA+55yL5Yiw5pyA5ZCO5LiA6KGM5rKh77yMPGNvZGU+T3JpZ2luPC9jb2RlPuWtl+auteS8muWRiuivieacjeWKoeWZqO+8jOaYr+WTquS4qua6kOWcsOWdgOWcqOi3qOWfn+ivt+axgjwvcD48b2wgc3RhcnQ9IjIiPgogIDxsaT48c3Ryb25nPuacjeWKoeWZqOWTjeW6lOWktOS4reW6lOWMheWQqzxjb2RlPkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbjwvY29kZT48L3N0cm9uZz48L2xpPgogIDwvb2w+CiAgPHA+5b2T5pyN5Yqh5Zmo5pS25Yiw6K+35rGC5ZCO77yM5aaC5p6c5YWB6K646K+l6K+35rGC6Leo5Z+f6K6/6Zeu77yM6ZyA6KaB5Zyo5ZON5bqU5aS05Lit5re75YqgPGNvZGU+QWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luPC9jb2RlPuWtl+autTwvcD48cD7or6XlrZfmrrXnmoTlgLzlj6/ku6XmmK/vvJo8L3A+PHVsPgogIDxsaT4q77ya6KGo56S65oiR5b6I5byA5pS+77yM5LuA5LmI5Lq65oiR6YO95YWB6K646K6/6ZeuPC9saT4KICA8bGk+5YW35L2T55qE5rqQ77ya5q+U5aaCPGNvZGU+aHR0cDovL215LmNvbTwvY29kZT7vvIzooajnpLrmiJHlsLHlhYHorrjkvaDorr/pl648L2xpPgogIDwvdWw+CiAgPGJsb2NrcXVvdGU+CiAgPHA+5a6e6ZmF5LiK77yM6L+Z5Lik5Liq5YC85a+55LqO5a6i5oi356uvPGNvZGU+aHR0cDovL215LmNvbTwvY29kZT7ogIzoqIDvvIzpg73kuIDmoLfvvIzlm6DkuLrlrqLmiLfnq6/miY3kuI3kvJrnrqHlhbbku5bmupDmnI3liqHlmajlhYHkuI3lhYHorrjvvIzlsLHlhbPlv4Poh6rlt7HmmK/lkKbooqvlhYHorrg8L3A+PHA+5b2T54S277yM5pyN5Yqh5Zmo5Lmf5Y+v5Lul57u05oqk5LiA5Liq5Y+v6KKr5YWB6K6455qE5rqQ5YiX6KGo77yM5aaC5p6c6K+35rGC55qEPGNvZGU+T3JpZ2luPC9jb2RlPuWRveS4reivpeWIl+ihqO+8jOaJjeWTjeW6lDxjb2RlPio8L2NvZGU+5oiW5YW35L2T55qE5rqQPC9wPjxwPjxzdHJvbmc+5Li65LqG6YG/5YWN5ZCO57ut55qE6bq754Om77yM5by654OI5o6o6I2Q5ZON5bqU5YW35L2T55qE5rqQPC9zdHJvbmc+PC9wPjwvYmxvY2txdW90ZT4KICA8cD7lgYforr7mnI3liqHlmajlgZrlh7rkuobku6XkuIvnmoTlk43lupTvvJo8L3A+PHByZT48Y29kZT5IVFRQLzEuMSAyMDAgT0sKICBEYXRlOiBUdWUsIDIxIEFwciAyMDIwIDA4OjAzOjM1IEdNVAogIC4uLgogIEFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbjogaHR0cDovL215LmNvbQogIC4uLgogIAogIOa2iOaBr+S9k+S4reeahOaVsOaNrjwvY29kZT48L3ByZT48cD7lvZPmtY/op4jlmajnnIvliLDmnI3liqHlmajlhYHorrjoh6rlt7Horr/pl67lkI7vvIzpq5jlhbTnmoTlg4/kuIDkuKrkuKTnmb7mlqTnmoTlranlrZDvvIzkuo7mmK/vvIzlroPlsLHmiorlk43lupTpobrliKnnmoTkuqTnu5lqc++8jOS7peWujOaIkOWQjue7reeahOaTjeS9nDwvcD48cD7kuIvlm77nroDov7DkuobmlbTkuKrkuqTkupLov4fnqIs8L3A+PGZpZ3VyZSBjbGFzcz0ibWFya2Rvd24taW1hZ2UiPgogICAgICAgIAogICAgICAgIDxpbWcgc3R5bGU9IndpZHRoOmF1dG8iIHNyYz0iaHR0cDovL21kcnMueXVhbmppbi50ZWNoL2ltZy9pbWFnZS0yMDIwMDQyMTE2Mjg0NjQ4MC5wbmciIHRpdGxlPSJpbWFnZS0yMDIwMDQyMTE2Mjg0NjQ4MCIgYWx0PSJpbWFnZS0yMDIwMDQyMTE2Mjg0NjQ4MCI+CiAgICAgICAgPGZpZ2NhcHRpb24+aW1hZ2UtMjAyMDA0MjExNjI4NDY0ODA8L2ZpZ2NhcHRpb24+CiAgICAKICAgICAgPC9maWd1cmU+PGgxIGlkPSJhcnRpY2xlLW1kLXRpdGxlLTUiPumcgOimgemihOajgOeahOivt+axgjwvaDE+PHA+566A5Y2V55qE6K+35rGC5a+55pyN5Yqh5Zmo55qE5aiB6IOB5LiN5aSn77yM5omA5Lul5YWB6K645L2/55So5LiK6L+w55qE566A5Y2V5Lqk5LqS5Y2z5Y+v5a6M5oiQ44CCPC9wPjxwPuS9huaYr++8jOWmguaenOa1j+iniOWZqOS4jeiupOS4uui/meaYr+S4gOenjeeugOWNleivt+axgu+8jOWwseS8muaMieeFp+S4i+mdoueahOa1geeoi+i/m+ihjO+8mjwvcD48b2w+CiAgPGxpPjxzdHJvbmc+5rWP6KeI5Zmo5Y+R6YCB6aKE5qOA6K+35rGC77yM6K+i6Zeu5pyN5Yqh5Zmo5piv5ZCm5YWB6K64PC9zdHJvbmc+PC9saT4KICA8bGk+PHN0cm9uZz7mnI3liqHlmajlhYHorrg8L3N0cm9uZz48L2xpPgogIDxsaT48c3Ryb25nPua1j+iniOWZqOWPkemAgeecn+Wunuivt+axgjwvc3Ryb25nPjwvbGk+CiAgPGxpPjxzdHJvbmc+5pyN5Yqh5Zmo5a6M5oiQ55yf5a6e55qE5ZON5bqUPC9zdHJvbmc+PC9saT4KICA8L29sPgogIDxwPuavlOWmgu+8jOWcqOmhtemdojxjb2RlPmh0dHA6Ly9teS5jb20vaW5kZXguaHRtbDwvY29kZT7kuK3mnInku6XkuIvku6PnoIHpgKDmiJDkuobot6jln588L3A+PHByZT48Y29kZSBjbGFzcz0ibGFuZ3VhZ2UtanMiPjxzcGFuIGNsYXNzPSJobGpzLWNvbW1lbnQiPi8vIOmcgOimgemihOajgOeahOivt+axgjwvc3Bhbj4KICBmZXRjaCg8c3BhbiBjbGFzcz0iaGxqcy1zdHJpbmciPiJodHRwOi8vY3Jvc3Nkb21haW4uY29tL2FwaS91c2VyIjwvc3Bhbj4sIHsKICAgIDxzcGFuIGNsYXNzPSJobGpzLWF0dHIiPm1ldGhvZDwvc3Bhbj46PHNwYW4gY2xhc3M9ImhsanMtc3RyaW5nIj4iUE9TVCI8L3NwYW4+LCA8c3BhbiBjbGFzcz0iaGxqcy1jb21tZW50Ij4vLyBwb3N0IOivt+axgjwvc3Bhbj4KICAgIDxzcGFuIGNsYXNzPSJobGpzLWF0dHIiPmhlYWRlcnM8L3NwYW4+OnsgIDxzcGFuIGNsYXNzPSJobGpzLWNvbW1lbnQiPi8vIOiuvue9ruivt+axguWktDwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9ImhsanMtYXR0ciI+YTwvc3Bhbj46IDxzcGFuIGNsYXNzPSJobGpzLW51bWJlciI+MTwvc3Bhbj4sCiAgICAgIDxzcGFuIGNsYXNzPSJobGpzLWF0dHIiPmI8L3NwYW4+OiA8c3BhbiBjbGFzcz0iaGxqcy1udW1iZXIiPjI8L3NwYW4+LAogICAgICA8c3BhbiBjbGFzcz0iaGxqcy1zdHJpbmciPiJjb250ZW50LXR5cGUiPC9zcGFuPjogPHNwYW4gY2xhc3M9ImhsanMtc3RyaW5nIj4iYXBwbGljYXRpb24vanNvbiI8L3NwYW4+CiAgICB9LAogICAgPHNwYW4gY2xhc3M9ImhsanMtYXR0ciI+Ym9keTwvc3Bhbj46IDxzcGFuIGNsYXNzPSJobGpzLWJ1aWx0X2luIj5KU09OPC9zcGFuPi5zdHJpbmdpZnkoeyA8c3BhbiBjbGFzcz0iaGxqcy1hdHRyIj5uYW1lPC9zcGFuPjogPHNwYW4gY2xhc3M9ImhsanMtc3RyaW5nIj4i6KKB5bCP6L+bIjwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJobGpzLWF0dHIiPmFnZTwvc3Bhbj46IDxzcGFuIGNsYXNzPSJobGpzLW51bWJlciI+MTg8L3NwYW4+IH0pIDxzcGFuIGNsYXNzPSJobGpzLWNvbW1lbnQiPi8vIOiuvue9ruivt+axguS9kzwvc3Bhbj4KICB9KTs8L2NvZGU+PC9wcmU+CiAgPHA+5rWP6KeI5Zmo5Y+R546w5a6D5LiN5piv5LiA5Liq566A5Y2V6K+35rGC77yM5YiZ5Lya5oyJ54Wn5LiL6Z2i55qE5rWB56iL5LiO5pyN5Yqh5Zmo5Lqk5LqSPC9wPjxvbD4KICA8bGk+PHN0cm9uZz7mtY/op4jlmajlj5HpgIHpooTmo4Dor7fmsYLvvIzor6Lpl67mnI3liqHlmajmmK/lkKblhYHorrg8L3N0cm9uZz48L2xpPgogIDwvb2w+CiAgPHByZT48Y29kZT5PUFRJT05TIC9hcGkvdXNlciBIVFRQLzEuMQogIEhvc3Q6IGNyb3NzZG9tYWluLmNvbQogIC4uLgogIE9yaWdpbjogaHR0cDovL215LmNvbQogIEFjY2Vzcy1Db250cm9sLVJlcXVlc3QtTWV0aG9kOiBQT1NUCiAgQWNjZXNzLUNvbnRyb2wtUmVxdWVzdC1IZWFkZXJzOiBhLCBiLCBjb250ZW50LXR5cGU8L2NvZGU+PC9wcmU+PHA+5Y+v5Lul55yL5Ye677yM6L+Z5bm26Z2e5oiR5Lus5oOz6KaB5Y+R5Ye655qE55yf5a6e6K+35rGC77yM6K+35rGC5Lit5LiN5YyF5ZCr5oiR5Lus55qE5ZON5bqU5aS077yM5Lmf5rKh5pyJ5raI5oGv5L2T44CCPC9wPjxwPui/meaYr+S4gOS4qumihOajgOivt+axgu+8jOWug+eahOebrueahOaYr+ivoumXruacjeWKoeWZqO+8jOaYr+WQpuWFgeiuuOWQjue7reeahOecn+Wunuivt+axguOAgjwvcD48cD7pooTmo4Dor7fmsYI8c3Ryb25nPuayoeacieivt+axguS9kzwvc3Ryb25nPu+8jOWug+WMheWQq+S6huWQjue7reecn+Wunuivt+axguimgeWBmueahOS6i+aDhTwvcD48cD7pooTmo4Dor7fmsYLmnInku6XkuIvnibnlvoHvvJo8L3A+PHVsPgogIDxsaT7or7fmsYLmlrnms5XkuLo8Y29kZT5PUFRJT05TPC9jb2RlPjwvbGk+CiAgPGxpPuayoeacieivt+axguS9kzwvbGk+CiAgPGxpPuivt+axguWktOS4reWMheWQqzx1bD4KICA8bGk+PGNvZGU+T3JpZ2luPC9jb2RlPu+8muivt+axgueahOa6kO+8jOWSjOeugOWNleivt+axgueahOWQq+S5ieS4gOiHtDwvbGk+CiAgPGxpPjxjb2RlPkFjY2Vzcy1Db250cm9sLVJlcXVlc3QtTWV0aG9kPC9jb2RlPu+8muWQjue7reeahOecn+Wunuivt+axguWwhuS9v+eUqOeahOivt+axguaWueazlTwvbGk+CiAgPGxpPjxjb2RlPkFjY2Vzcy1Db250cm9sLVJlcXVlc3QtSGVhZGVyczwvY29kZT7vvJrlkI7nu63nmoTnnJ/lrp7or7fmsYLkvJrmlLnliqjnmoTor7fmsYLlpLQ8L2xpPgogIDwvdWw+CiAgPC9saT4KICA8L3VsPgogIDxvbCBzdGFydD0iMiI+CiAgPGxpPjxzdHJvbmc+5pyN5Yqh5Zmo5YWB6K64PC9zdHJvbmc+PC9saT4KICA8L29sPgogIDxwPuacjeWKoeWZqOaUtuWIsOmihOajgOivt+axguWQju+8jOWPr+S7peajgOafpemihOajgOivt+axguS4reWMheWQq+eahOS/oeaBr++8jOWmguaenOWFgeiuuOi/meagt+eahOivt+axgu+8jOmcgOimgeWTjeW6lOS4i+mdoueahOa2iOaBr+agvOW8jzwvcD48cHJlPjxjb2RlPkhUVFAvMS4xIDIwMCBPSwogIERhdGU6IFR1ZSwgMjEgQXByIDIwMjAgMDg6MDM6MzUgR01UCiAgLi4uCiAgQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luOiBodHRwOi8vbXkuY29tCiAgQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kczogUE9TVAogIEFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnM6IGEsIGIsIGNvbnRlbnQtdHlwZQogIEFjY2Vzcy1Db250cm9sLU1heC1BZ2U6IDg2NDAwCiAgLi4uPC9jb2RlPjwvcHJlPjxwPuWvueS6jumihOajgOivt+axgu+8jOS4jemcgOimgeWTjeW6lOS7u+S9leeahOa2iOaBr+S9k++8jOWPqumcgOimgeWcqOWTjeW6lOWktOS4rea3u+WKoO+8mjwvcD48dWw+CiAgPGxpPjxjb2RlPkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbjwvY29kZT7vvJrlkoznroDljZXor7fmsYLkuIDmoLfvvIzooajnpLrlhYHorrjnmoTmupA8L2xpPgogIDxsaT48Y29kZT5BY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzPC9jb2RlPu+8muihqOekuuWFgeiuuOeahOWQjue7reecn+WunueahOivt+axguaWueazlTwvbGk+CiAgPGxpPjxjb2RlPkFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnM8L2NvZGU+77ya6KGo56S65YWB6K645pS55Yqo55qE6K+35rGC5aS0PC9saT4KICA8bGk+PGNvZGU+QWNjZXNzLUNvbnRyb2wtTWF4LUFnZTwvY29kZT7vvJrlkYror4nmtY/op4jlmajvvIzlpJrlsJHnp5LlhoXvvIzlr7nkuo7lkIzmoLfnmoTor7fmsYLmupDjgIHmlrnms5XjgIHlpLTvvIzpg73kuI3pnIDopoHlho3lj5HpgIHpooTmo4Dor7fmsYLkuoY8L2xpPgogIDwvdWw+CiAgPG9sIHN0YXJ0PSIzIj4KICA8bGk+PHN0cm9uZz7mtY/op4jlmajlj5HpgIHnnJ/lrp7or7fmsYI8L3N0cm9uZz48L2xpPgogIDwvb2w+CiAgPHA+6aKE5qOA6KKr5pyN5Yqh5Zmo5YWB6K645ZCO77yM5rWP6KeI5Zmo5bCx5Lya5Y+R6YCB55yf5a6e6K+35rGC5LqG77yM5LiK6Z2i55qE5Luj56CB5Lya5Y+R55Sf5LiL6Z2i55qE6K+35rGC5pWw5o2uPC9wPjxwcmU+PGNvZGU+UE9TVCAvYXBpL3VzZXIgSFRUUC8xLjEKICBIb3N0OiBjcm9zc2RvbWFpbi5jb20KICBDb25uZWN0aW9uOiBrZWVwLWFsaXZlCiAgLi4uCiAgUmVmZXJlcjogaHR0cDovL215LmNvbS9pbmRleC5odG1sCiAgT3JpZ2luOiBodHRwOi8vbXkuY29tCiAgCiAgeyJuYW1lIjogIuiigeWwj+i/myIsICJhZ2UiOiAxOCB9PC9jb2RlPjwvcHJlPjxvbCBzdGFydD0iNCI+CiAgPGxpPjxzdHJvbmc+5pyN5Yqh5Zmo5ZON5bqU55yf5a6e6K+35rGCPC9zdHJvbmc+PC9saT4KICA8L29sPgogIDxwcmU+PGNvZGU+SFRUUC8xLjEgMjAwIE9LCiAgRGF0ZTogVHVlLCAyMSBBcHIgMjAyMCAwODowMzozNSBHTVQKICAuLi4KICBBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHA6Ly9teS5jb20KICAuLi4KICAKICDmt7vliqDnlKjmiLfmiJDlip88L2NvZGU+PC9wcmU+PHA+5Y+v5Lul55yL5Ye677yM5b2T5a6M5oiQ6aKE5qOA5LmL5ZCO77yM5ZCO57ut55qE5aSE55CG5LiO566A5Y2V6K+35rGC55u45ZCMPC9wPjxwPuS4i+WbvueugOi/sOS6huaVtOS4quS6pOS6kui/h+eoizwvcD48ZmlndXJlIGNsYXNzPSJtYXJrZG93bi1pbWFnZSI+CiAgICAgICAgCiAgICAgICAgPGltZyBzdHlsZT0id2lkdGg6YXV0byIgc3JjPSJodHRwOi8vbWRycy55dWFuamluLnRlY2gvaW1nL2ltYWdlLTIwMjAwNDIxMTY1OTEzMzIwLnBuZyIgdGl0bGU9ImltYWdlLTIwMjAwNDIxMTY1OTEzMzIwIiBhbHQ9ImltYWdlLTIwMjAwNDIxMTY1OTEzMzIwIj4KICAgICAgICA8ZmlnY2FwdGlvbj5pbWFnZS0yMDIwMDQyMTE2NTkxMzMyMDwvZmlnY2FwdGlvbj4KICAgIAogICAgICA8L2ZpZ3VyZT48aDEgaWQ9ImFydGljbGUtbWQtdGl0bGUtNiI+6ZmE5bim6Lqr5Lu95Yet6K+B55qE6K+35rGCPC9oMT48cD7pu5jorqTmg4XlhrXkuIvvvIxhamF455qE6Leo5Z+f6K+35rGC5bm25LiN5Lya6ZmE5bimY29va2ll77yM6L+Z5qC35LiA5p2l77yM5p+Q5Lqb6ZyA6KaB5p2D6ZmQ55qE5pON5L2c5bCx5peg5rOV6L+b6KGMPC9wPjxwPuS4jei/h+WPr+S7pemAmui/h+eugOWNleeahOmFjee9ruWwseWPr+S7peWunueOsOmZhOW4pmNvb2tpZTwvcD48cHJlPjxjb2RlIGNsYXNzPSJsYW5ndWFnZS1qcyI+PHNwYW4gY2xhc3M9ImhsanMtY29tbWVudCI+Ly8geGhyPC9zcGFuPgogIDxzcGFuIGNsYXNzPSJobGpzLWtleXdvcmQiPnZhcjwvc3Bhbj4geGhyID0gPHNwYW4gY2xhc3M9ImhsanMta2V5d29yZCI+bmV3PC9zcGFuPiBYTUxIdHRwUmVxdWVzdCgpOwogIHhoci53aXRoQ3JlZGVudGlhbHMgPSA8c3BhbiBjbGFzcz0iaGxqcy1saXRlcmFsIj50cnVlPC9zcGFuPjsKICAKICA8c3BhbiBjbGFzcz0iaGxqcy1jb21tZW50Ij4vLyBmZXRjaCBhcGk8L3NwYW4+CiAgZmV0Y2godXJsLCB7CiAgICA8c3BhbiBjbGFzcz0iaGxqcy1hdHRyIj5jcmVkZW50aWFsczwvc3Bhbj46IDxzcGFuIGNsYXNzPSJobGpzLXN0cmluZyI+ImluY2x1ZGUiPC9zcGFuPgogIH0pPC9jb2RlPjwvcHJlPgogIDxwPui/meagt+S4gOadpe+8jOivpei3qOWfn+eahGFqYXjor7fmsYLlsLHmmK/kuIDkuKo8ZW0+6ZmE5bim6Lqr5Lu95Yet6K+B55qE6K+35rGCPC9lbT48L3A+PHA+5b2T5LiA5Liq6K+35rGC6ZyA6KaB6ZmE5bimY29va2ll5pe277yM5peg6K665a6D5piv566A5Y2V6K+35rGC77yM6L+Y5piv6aKE5qOA6K+35rGC77yM6YO95Lya5Zyo6K+35rGC5aS05Lit5re75YqgPGNvZGU+Y29va2llPC9jb2RlPuWtl+autTwvcD48cD7ogIzmnI3liqHlmajlk43lupTml7bvvIzpnIDopoHmmI7noa7lkYrnn6XlrqLmiLfnq6/vvJrmnI3liqHlmajlhYHorrjov5nmoLfnmoTlh63mja48L3A+PHA+5ZGK55+l55qE5pa55byP5Lmf6Z2e5bi455qE566A5Y2V77yM5Y+q6ZyA6KaB5Zyo5ZON5bqU5aS05Lit5re75Yqg77yaPGNvZGU+QWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWU8L2NvZGU+5Y2z5Y+vPC9wPjxwPuWvueS6juS4gOS4qumZhOW4pui6q+S7veWHreivgeeahOivt+axgu+8jOiLpeacjeWKoeWZqOayoeacieaYjuehruWRiuefpe+8jOa1j+iniOWZqOS7jeeEtuinhuS4uui3qOWfn+iiq+aLkue7neOAgjwvcD48cD7lj6blpJbopoHnibnliKvms6jmhI/nmoTmmK/vvJo8c3Ryb25nPuWvueS6jumZhOW4pui6q+S7veWHreivgeeahOivt+axgu+8jOacjeWKoeWZqOS4jeW+l+iuvue9riA8Y29kZT5BY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4g55qE5YC85Li6KjwvY29kZT48L3N0cm9uZz7jgILov5nlsLHmmK/kuLrku4DkuYjkuI3mjqjojZDkvb/nlKgq55qE5Y6f5ZugPC9wPjxoMSBpZD0iYXJ0aWNsZS1tZC10aXRsZS03Ij7kuIDkuKrpop3lpJbnmoTooaXlhYU8L2gxPjxwPuWcqOi3qOWfn+iuv+mXruaXtu+8jEpT5Y+q6IO95ou/5Yiw5LiA5Lqb5pyA5Z+65pys55qE5ZON5bqU5aS077yM5aaC77yaQ2FjaGUtQ29udHJvbOOAgUNvbnRlbnQtTGFuZ3VhZ2XjgIFDb250ZW50LVR5cGXjgIFFeHBpcmVz44CBTGFzdC1Nb2RpZmllZOOAgVByYWdtYe+8jOWmguaenOimgeiuv+mXruWFtuS7luWktO+8jOWImemcgOimgeacjeWKoeWZqOiuvue9ruacrOWTjeW6lOWktOOAgjwvcD48cD48Y29kZT5BY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczwvY29kZT7lpLTorqnmnI3liqHlmajmiorlhYHorrjmtY/op4jlmajorr/pl67nmoTlpLTmlL7lhaXnmb3lkI3ljZXvvIzkvovlpoLvvJo8L3A+PHByZT48Y29kZT5BY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogYXV0aG9yaXphdGlvbiwgYSwgYjwvY29kZT48L3ByZT48cD7ov5nmoLdKU+WwseiDveWkn+iuv+mXruaMh+WumueahOWTjeW6lOWktOS6huOAgjwvcD5gCiAgfQp9KTsKTW9jay5tb2NrKCIvYXBpL2NvbW1lbnQiLCAicG9zdCIsIHsKICBjb2RlOiAwLAogIG1zZzogIiIsCiAgZGF0YTogewogICAgaWQ6ICJAZ3VpZCIsCiAgICBuaWNrbmFtZTogIkBjbmFtZSIsCiAgICBjb250ZW50OiAiQGNwYXJhZ3JhcGgoMSwgMTApIiwKICAgIGNyZWF0ZURhdGU6IERhdGUubm93KCksCiAgICAiYXZhdGFyfDEiOiBbImh0dHBzOi8vcWloZWl6aGl5YS5vc3MtY24tc2hlbnpoZW4uYWxpeXVuY3MuY29tL2ltYWdlL2F2YXRhcjYuanBnIiwgImh0dHBzOi8vcWloZWl6aGl5YS5vc3MtY24tc2hlbnpoZW4uYWxpeXVuY3MuY29tL2ltYWdlL2F2YXRhcjQuanBnIiwgImh0dHBzOi8vcWloZWl6aGl5YS5vc3MtY24tc2hlbnpoZW4uYWxpeXVuY3MuY29tL2ltYWdlL2F2YXRhcjguanBnIiwgImh0dHBzOi8vcWloZWl6aGl5YS5vc3MtY24tc2hlbnpoZW4uYWxpeXVuY3MuY29tL2ltYWdlL2F2YXRhcjIuanBnIl0KICB9Cn0pOwpNb2NrLm1vY2soL15cL2FwaVwvY29tbWVudFwvPyhcPy4rKT8kLywgImdldCIsIGZ1bmN0aW9uIChvcHRpb25zKSB7CiAgY29uc3QgcXVlcnkgPSBxcy5wYXJzZShvcHRpb25zLnVybCk7CiAgcmV0dXJuIE1vY2subW9jayh7CiAgICBjb2RlOiAwLAogICAgbXNnOiAiIiwKICAgIGRhdGE6IHsKICAgICAgdG90YWw6IDUyLAogICAgICBbYHJvd3N8JHtxdWVyeS5saW1pdCB8fCAxMH1gXTogW3sKICAgICAgICBpZDogIkBndWlkIiwKICAgICAgICBuaWNrbmFtZTogIkBjbmFtZSIsCiAgICAgICAgY29udGVudDogIkBjcGFyYWdyYXBoKDEsIDEwKSIsCiAgICAgICAgY3JlYXRlRGF0ZTogRGF0ZS5ub3coKSwKICAgICAgICAiYXZhdGFyfDEiOiBbImh0dHBzOi8vcWloZWl6aGl5YS5vc3MtY24tc2hlbnpoZW4uYWxpeXVuY3MuY29tL2ltYWdlL2F2YXRhcjYuanBnIiwgImh0dHBzOi8vcWloZWl6aGl5YS5vc3MtY24tc2hlbnpoZW4uYWxpeXVuY3MuY29tL2ltYWdlL2F2YXRhcjQuanBnIiwgImh0dHBzOi8vcWloZWl6aGl5YS5vc3MtY24tc2hlbnpoZW4uYWxpeXVuY3MuY29tL2ltYWdlL2F2YXRhcjguanBnIiwgImh0dHBzOi8vcWloZWl6aGl5YS5vc3MtY24tc2hlbnpoZW4uYWxpeXVuY3MuY29tL2ltYWdlL2F2YXRhcjIuanBnIl0KICAgICAgfV0KICAgIH0KICB9KTsKfSk7"},{"version":3,"sources":["/Users/jixinyan/Desktop/前端/DuYi-Vue2/1. 入门/39. 打包结果分析/课堂代码/my-site/src/mock/blog.js"],"names":["Mock","qs","mock","code","msg","name","options","query","parse","url","data","limit","id","title","description","category","createDate","toc","anchor","children","Random","image","htmlContent","nickname","content","Date","now","total"],"mappings":"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","sourcesContent":["import Mock from \"mockjs\";\nimport qs from \"querystring\";\nMock.mock(\"/api/blogtype\", \"get\", {\n  code: 0,\n  msg: \"\",\n  \"data|10-20\": [\n    {\n      \"id|+1\": 1,\n      name: \"分类@id\",\n      \"articleCount|0-300\": 0,\n      \"order|+1\": 1,\n    },\n  ],\n});\n\nMock.mock(/^\\/api\\/blog(\\?.+)?$/, \"get\", function(options) {\n  const query = qs.parse(options.url);\n\n  return Mock.mock({\n    code: 0,\n    msg: \"\",\n    data: {\n      \"total|2000-3000\": 0,\n      [`rows|${query.limit || 10}`]: [\n        {\n          id: \"@guid\",\n          title: \"@ctitle(1, 50)\",\n          description: \"@cparagraph(1, 10)\",\n          category: {\n            \"id|1-10\": 0,\n            name: \"分类@id\",\n          },\n          \"scanNumber|0-3000\": 0,\n          \"commentNumber|0-300\": 30,\n          \"thumb|1\": [\"@image(300x250, @color, #fff, @natural)\"],\n          createDate: `@date('T')`,\n        },\n      ],\n    },\n  });\n});\n\nMock.mock(/^\\/api\\/blog\\/[^/]+$/, \"get\", {\n  code: 0,\n  msg: \"\",\n  data: {\n    id: \"@guid\",\n    title: \"CORS跨域方案详解\",\n    category: {\n      \"id|1-10\": 1,\n      name: \"分类@id\",\n    },\n    description: \"@cparagraph(1, 10)\",\n    \"scanNumber|0-10000\": 0,\n    \"commentNumber|0-100\": 0,\n    createDate: \"@date('T')\",\n    toc: [\n      { name: \"概述\", anchor: \"article-md-title-1\" },\n      {\n        name: \"简单请求\",\n        anchor: \"article-md-title-2\",\n        children: [\n          { name: \"简单请求的判定\", anchor: \"article-md-title-3\" },\n          { name: \"简单请求的交互规范\", anchor: \"article-md-title-4\" },\n        ],\n      },\n      {\n        name: \"需要预检的请求\",\n        anchor: \"article-md-title-5\",\n      },\n      {\n        name: \"附带身份凭证的请求\",\n        anchor: \"article-md-title-6\",\n      },\n      {\n        name: \"一个额外的补充\",\n        anchor: \"article-md-title-7\",\n      },\n    ],\n    \"thumb|1\": [\n      Mock.Random.image(\"300x250\", \"#000\", \"#fff\", \"Random Image\"),\n      null,\n    ],\n    htmlContent: `<blockquote>\n  <p>阅读本文，你需要首先知道：</p><ol>\n  <li>浏览器的同源策略</li>\n  <li>跨域问题</li>\n  <li>JSONP原理</li>\n  <li>cookie原理</li>\n  </ol>\n  </blockquote>\n  <p>JSONP并不是一个好的跨域解决方案，它至少有着下面两个严重问题：</p><ol>\n  <li><strong>会打乱服务器的消息格式</strong>：JSONP要求服务器响应一段JS代码，但在非跨域的情况下，服务器又需要响应一个正常的JSON格式</li>\n  <li><strong>只能完成GET请求</strong>：JSONP的原理会要求浏览器端生成一个<code>script</code>元素，而<code>script</code>元素发出的请求只能是<code>get</code>请求</li>\n  </ol>\n  <p>所以，CORS是一种更好的跨域解决方案。</p><h1 id=\"article-md-title-1\">概述</h1><p><code>CORS</code>是基于<code>http1.1</code>的一种跨域解决方案，它的全称是<strong>C</strong>ross-<strong>O</strong>rigin <strong>R</strong>esource <strong>S</strong>haring，跨域资源共享。</p><p>它的总体思路是：<strong>如果浏览器要跨域访问服务器的资源，需要获得服务器的允许</strong></p><figure class=\"markdown-image\">\n        \n        <img style=\"width:auto\" src=\"http://mdrs.yuanjin.tech/img/image-20200421152122793.png\" title=\"image-20200421152122793\" alt=\"image-20200421152122793\">\n        <figcaption>image-20200421152122793</figcaption>\n    \n      </figure><p>而要知道，一个请求可以附带很多信息，从而会对服务器造成不同程度的影响</p><p>比如有的请求只是获取一些新闻，有的请求会改动服务器的数据</p><p>针对不同的请求，CORS规定了三种不同的交互模式，分别是：</p><ul>\n  <li><strong>简单请求</strong></li>\n  <li><strong>需要预检的请求</strong></li>\n  <li><strong>附带身份凭证的请求</strong></li>\n  </ul>\n  <p>这三种模式从上到下层层递进，请求可以做的事越来越多，要求也越来越严格。</p><p>下面分别说明三种请求模式的具体规范。</p><h1 id=\"article-md-title-2\">简单请求</h1><p>当浏览器端运行了一段ajax代码（无论是使用XMLHttpRequest还是fetch api），浏览器会首先判断它属于哪一种请求模式</p><h2 id=\"article-md-title-3\">简单请求的判定</h2><p>当请求<strong>同时满足</strong>以下条件时，浏览器会认为它是一个简单请求：</p><ol>\n  <li><p><strong>请求方法属于下面的一种：</strong></p><ul>\n  <li>get</li>\n  <li>post</li>\n  <li>head</li>\n  </ul>\n  </li>\n  <li><p><strong>请求头仅包含安全的字段，常见的安全字段如下：</strong></p><ul>\n  <li><code>Accept</code></li>\n  <li><code>Accept-Language</code></li>\n  <li><code>Content-Language</code></li>\n  <li><code>Content-Type</code></li>\n  <li><code>DPR</code></li>\n  <li><code>Downlink</code></li>\n  <li><code>Save-Data</code></li>\n  <li><code>Viewport-Width</code></li>\n  <li><code>Width</code></li>\n  </ul>\n  </li>\n  <li><p><strong>请求头如果包含<code>Content-Type</code>，仅限下面的值之一：</strong></p><ul>\n  <li><code>text/plain</code></li>\n  <li><code>multipart/form-data</code></li>\n  <li><code>application/x-www-form-urlencoded</code></li>\n  </ul>\n  </li>\n  </ol>\n  <p>如果以上三个条件同时满足，浏览器判定为简单请求。</p><p>下面是一些例子：</p><pre><code class=\"language-js\"><span class=\"hljs-comment\">// 简单请求</span>\n  fetch(<span class=\"hljs-string\">\"http://crossdomain.com/api/news\"</span>);\n  \n  <span class=\"hljs-comment\">// 请求方法不满足要求，不是简单请求</span>\n  fetch(<span class=\"hljs-string\">\"http://crossdomain.com/api/news\"</span>, {\n    <span class=\"hljs-attr\">method</span>:<span class=\"hljs-string\">\"PUT\"</span>\n  })\n  \n  <span class=\"hljs-comment\">// 加入了额外的请求头，不是简单请求</span>\n  fetch(<span class=\"hljs-string\">\"http://crossdomain.com/api/news\"</span>, {\n    <span class=\"hljs-attr\">headers</span>:{\n      <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>\n    }\n  })\n  \n  <span class=\"hljs-comment\">// 简单请求</span>\n  fetch(<span class=\"hljs-string\">\"http://crossdomain.com/api/news\"</span>, {\n    <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">\"post\"</span>\n  })\n  \n  <span class=\"hljs-comment\">// content-type不满足要求，不是简单请求</span>\n  fetch(<span class=\"hljs-string\">\"http://crossdomain.com/api/news\"</span>, {\n    <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">\"post\"</span>,\n    <span class=\"hljs-attr\">headers</span>: {\n      <span class=\"hljs-string\">\"content-type\"</span>: <span class=\"hljs-string\">\"application/json\"</span>\n    }\n  })</code></pre>\n  <h2 id=\"article-md-title-4\">简单请求的交互规范</h2><p>当浏览器判定某个<strong>ajax跨域请求</strong>是<strong>简单请求</strong>时，会发生以下的事情</p><ol>\n  <li><strong>请求头中会自动添加<code>Origin</code>字段</strong></li>\n  </ol>\n  <p>比如，在页面<code>http://my.com/index.html</code>中有以下代码造成了跨域</p><pre><code class=\"language-js\"><span class=\"hljs-comment\">// 简单请求</span>\n  fetch(<span class=\"hljs-string\">\"http://crossdomain.com/api/news\"</span>);</code></pre>\n  <p>请求发出后，请求头会是下面的格式：</p><pre><code>GET /api/news/ HTTP/1.1\n  Host: crossdomain.com\n  Connection: keep-alive\n  ...\n  Referer: http://my.com/index.html\n  Origin: http://my.com</code></pre><p>看到最后一行没，<code>Origin</code>字段会告诉服务器，是哪个源地址在跨域请求</p><ol start=\"2\">\n  <li><strong>服务器响应头中应包含<code>Access-Control-Allow-Origin</code></strong></li>\n  </ol>\n  <p>当服务器收到请求后，如果允许该请求跨域访问，需要在响应头中添加<code>Access-Control-Allow-Origin</code>字段</p><p>该字段的值可以是：</p><ul>\n  <li>*：表示我很开放，什么人我都允许访问</li>\n  <li>具体的源：比如<code>http://my.com</code>，表示我就允许你访问</li>\n  </ul>\n  <blockquote>\n  <p>实际上，这两个值对于客户端<code>http://my.com</code>而言，都一样，因为客户端才不会管其他源服务器允不允许，就关心自己是否被允许</p><p>当然，服务器也可以维护一个可被允许的源列表，如果请求的<code>Origin</code>命中该列表，才响应<code>*</code>或具体的源</p><p><strong>为了避免后续的麻烦，强烈推荐响应具体的源</strong></p></blockquote>\n  <p>假设服务器做出了以下的响应：</p><pre><code>HTTP/1.1 200 OK\n  Date: Tue, 21 Apr 2020 08:03:35 GMT\n  ...\n  Access-Control-Allow-Origin: http://my.com\n  ...\n  \n  消息体中的数据</code></pre><p>当浏览器看到服务器允许自己访问后，高兴的像一个两百斤的孩子，于是，它就把响应顺利的交给js，以完成后续的操作</p><p>下图简述了整个交互过程</p><figure class=\"markdown-image\">\n        \n        <img style=\"width:auto\" src=\"http://mdrs.yuanjin.tech/img/image-20200421162846480.png\" title=\"image-20200421162846480\" alt=\"image-20200421162846480\">\n        <figcaption>image-20200421162846480</figcaption>\n    \n      </figure><h1 id=\"article-md-title-5\">需要预检的请求</h1><p>简单的请求对服务器的威胁不大，所以允许使用上述的简单交互即可完成。</p><p>但是，如果浏览器不认为这是一种简单请求，就会按照下面的流程进行：</p><ol>\n  <li><strong>浏览器发送预检请求，询问服务器是否允许</strong></li>\n  <li><strong>服务器允许</strong></li>\n  <li><strong>浏览器发送真实请求</strong></li>\n  <li><strong>服务器完成真实的响应</strong></li>\n  </ol>\n  <p>比如，在页面<code>http://my.com/index.html</code>中有以下代码造成了跨域</p><pre><code class=\"language-js\"><span class=\"hljs-comment\">// 需要预检的请求</span>\n  fetch(<span class=\"hljs-string\">\"http://crossdomain.com/api/user\"</span>, {\n    <span class=\"hljs-attr\">method</span>:<span class=\"hljs-string\">\"POST\"</span>, <span class=\"hljs-comment\">// post 请求</span>\n    <span class=\"hljs-attr\">headers</span>:{  <span class=\"hljs-comment\">// 设置请求头</span>\n      <span class=\"hljs-attr\">a</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">b</span>: <span class=\"hljs-number\">2</span>,\n      <span class=\"hljs-string\">\"content-type\"</span>: <span class=\"hljs-string\">\"application/json\"</span>\n    },\n    <span class=\"hljs-attr\">body</span>: <span class=\"hljs-built_in\">JSON</span>.stringify({ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"袁小进\"</span>, <span class=\"hljs-attr\">age</span>: <span class=\"hljs-number\">18</span> }) <span class=\"hljs-comment\">// 设置请求体</span>\n  });</code></pre>\n  <p>浏览器发现它不是一个简单请求，则会按照下面的流程与服务器交互</p><ol>\n  <li><strong>浏览器发送预检请求，询问服务器是否允许</strong></li>\n  </ol>\n  <pre><code>OPTIONS /api/user HTTP/1.1\n  Host: crossdomain.com\n  ...\n  Origin: http://my.com\n  Access-Control-Request-Method: POST\n  Access-Control-Request-Headers: a, b, content-type</code></pre><p>可以看出，这并非我们想要发出的真实请求，请求中不包含我们的响应头，也没有消息体。</p><p>这是一个预检请求，它的目的是询问服务器，是否允许后续的真实请求。</p><p>预检请求<strong>没有请求体</strong>，它包含了后续真实请求要做的事情</p><p>预检请求有以下特征：</p><ul>\n  <li>请求方法为<code>OPTIONS</code></li>\n  <li>没有请求体</li>\n  <li>请求头中包含<ul>\n  <li><code>Origin</code>：请求的源，和简单请求的含义一致</li>\n  <li><code>Access-Control-Request-Method</code>：后续的真实请求将使用的请求方法</li>\n  <li><code>Access-Control-Request-Headers</code>：后续的真实请求会改动的请求头</li>\n  </ul>\n  </li>\n  </ul>\n  <ol start=\"2\">\n  <li><strong>服务器允许</strong></li>\n  </ol>\n  <p>服务器收到预检请求后，可以检查预检请求中包含的信息，如果允许这样的请求，需要响应下面的消息格式</p><pre><code>HTTP/1.1 200 OK\n  Date: Tue, 21 Apr 2020 08:03:35 GMT\n  ...\n  Access-Control-Allow-Origin: http://my.com\n  Access-Control-Allow-Methods: POST\n  Access-Control-Allow-Headers: a, b, content-type\n  Access-Control-Max-Age: 86400\n  ...</code></pre><p>对于预检请求，不需要响应任何的消息体，只需要在响应头中添加：</p><ul>\n  <li><code>Access-Control-Allow-Origin</code>：和简单请求一样，表示允许的源</li>\n  <li><code>Access-Control-Allow-Methods</code>：表示允许的后续真实的请求方法</li>\n  <li><code>Access-Control-Allow-Headers</code>：表示允许改动的请求头</li>\n  <li><code>Access-Control-Max-Age</code>：告诉浏览器，多少秒内，对于同样的请求源、方法、头，都不需要再发送预检请求了</li>\n  </ul>\n  <ol start=\"3\">\n  <li><strong>浏览器发送真实请求</strong></li>\n  </ol>\n  <p>预检被服务器允许后，浏览器就会发送真实请求了，上面的代码会发生下面的请求数据</p><pre><code>POST /api/user HTTP/1.1\n  Host: crossdomain.com\n  Connection: keep-alive\n  ...\n  Referer: http://my.com/index.html\n  Origin: http://my.com\n  \n  {\"name\": \"袁小进\", \"age\": 18 }</code></pre><ol start=\"4\">\n  <li><strong>服务器响应真实请求</strong></li>\n  </ol>\n  <pre><code>HTTP/1.1 200 OK\n  Date: Tue, 21 Apr 2020 08:03:35 GMT\n  ...\n  Access-Control-Allow-Origin: http://my.com\n  ...\n  \n  添加用户成功</code></pre><p>可以看出，当完成预检之后，后续的处理与简单请求相同</p><p>下图简述了整个交互过程</p><figure class=\"markdown-image\">\n        \n        <img style=\"width:auto\" src=\"http://mdrs.yuanjin.tech/img/image-20200421165913320.png\" title=\"image-20200421165913320\" alt=\"image-20200421165913320\">\n        <figcaption>image-20200421165913320</figcaption>\n    \n      </figure><h1 id=\"article-md-title-6\">附带身份凭证的请求</h1><p>默认情况下，ajax的跨域请求并不会附带cookie，这样一来，某些需要权限的操作就无法进行</p><p>不过可以通过简单的配置就可以实现附带cookie</p><pre><code class=\"language-js\"><span class=\"hljs-comment\">// xhr</span>\n  <span class=\"hljs-keyword\">var</span> xhr = <span class=\"hljs-keyword\">new</span> XMLHttpRequest();\n  xhr.withCredentials = <span class=\"hljs-literal\">true</span>;\n  \n  <span class=\"hljs-comment\">// fetch api</span>\n  fetch(url, {\n    <span class=\"hljs-attr\">credentials</span>: <span class=\"hljs-string\">\"include\"</span>\n  })</code></pre>\n  <p>这样一来，该跨域的ajax请求就是一个<em>附带身份凭证的请求</em></p><p>当一个请求需要附带cookie时，无论它是简单请求，还是预检请求，都会在请求头中添加<code>cookie</code>字段</p><p>而服务器响应时，需要明确告知客户端：服务器允许这样的凭据</p><p>告知的方式也非常的简单，只需要在响应头中添加：<code>Access-Control-Allow-Credentials: true</code>即可</p><p>对于一个附带身份凭证的请求，若服务器没有明确告知，浏览器仍然视为跨域被拒绝。</p><p>另外要特别注意的是：<strong>对于附带身份凭证的请求，服务器不得设置 <code>Access-Control-Allow-Origin 的值为*</code></strong>。这就是为什么不推荐使用*的原因</p><h1 id=\"article-md-title-7\">一个额外的补充</h1><p>在跨域访问时，JS只能拿到一些最基本的响应头，如：Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma，如果要访问其他头，则需要服务器设置本响应头。</p><p><code>Access-Control-Expose-Headers</code>头让服务器把允许浏览器访问的头放入白名单，例如：</p><pre><code>Access-Control-Expose-Headers: authorization, a, b</code></pre><p>这样JS就能够访问指定的响应头了。</p>`,\n  },\n});\n\nMock.mock(\"/api/comment\", \"post\", {\n  code: 0,\n  msg: \"\",\n  data: {\n    id: \"@guid\",\n    nickname: \"@cname\",\n    content: \"@cparagraph(1, 10)\",\n    createDate: Date.now(),\n    \"avatar|1\": [\n      \"https://qiheizhiya.oss-cn-shenzhen.aliyuncs.com/image/avatar6.jpg\",\n      \"https://qiheizhiya.oss-cn-shenzhen.aliyuncs.com/image/avatar4.jpg\",\n      \"https://qiheizhiya.oss-cn-shenzhen.aliyuncs.com/image/avatar8.jpg\",\n      \"https://qiheizhiya.oss-cn-shenzhen.aliyuncs.com/image/avatar2.jpg\",\n    ],\n  },\n});\n\nMock.mock(/^\\/api\\/comment\\/?(\\?.+)?$/, \"get\", function(options) {\n  const query = qs.parse(options.url);\n\n  return Mock.mock({\n    code: 0,\n    msg: \"\",\n    data: {\n      total: 52,\n      [`rows|${query.limit || 10}`]: [\n        {\n          id: \"@guid\",\n          nickname: \"@cname\",\n          content: \"@cparagraph(1, 10)\",\n          createDate: Date.now(),\n          \"avatar|1\": [\n            \"https://qiheizhiya.oss-cn-shenzhen.aliyuncs.com/image/avatar6.jpg\",\n            \"https://qiheizhiya.oss-cn-shenzhen.aliyuncs.com/image/avatar4.jpg\",\n            \"https://qiheizhiya.oss-cn-shenzhen.aliyuncs.com/image/avatar8.jpg\",\n            \"https://qiheizhiya.oss-cn-shenzhen.aliyuncs.com/image/avatar2.jpg\",\n          ],\n        },\n      ],\n    },\n  });\n});\n"]}]}